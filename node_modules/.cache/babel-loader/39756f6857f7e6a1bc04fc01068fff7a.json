{"ast":null,"code":"var _jsxFileName = \"C:\\\\Priya\\\\BakeMore\\\\bakemore\\\\src\\\\Components\\\\Cards.jsx\";\nimport React from 'react';\n\nvar Cards = function Cards(_ref) {\n  var property = _ref.property;\n  var index = property.index,\n      picture = property.picture,\n      id = property.id;\n  console.log(property);\n  return React.createElement(\"div\", {\n    id: \"card-\".concat(index),\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: picture,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"// \"));\n};\n\nexport default Cards;","map":{"version":3,"sources":["C:\\Priya\\BakeMore\\bakemore\\src\\Components\\Cards.jsx"],"names":["React","Cards","property","index","picture","id","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAc;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAAA,MACjBC,KADiB,GACID,QADJ,CACjBC,KADiB;AAAA,MACVC,OADU,GACIF,QADJ,CACVE,OADU;AAAA,MACFC,EADE,GACIH,QADJ,CACFG,EADE;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SACI;AAAK,IAAA,EAAE,iBAAUC,KAAV,CAAP;AAA0B,IAAA,SAAS,EAAC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAEC,OAAV;AAAmB,IAAA,GAAG,EAAC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAER;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFQ,CADJ;AAQH,CAXD;;AAaA,eAAeH,KAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Cards = ({property})=>{\r\n    const {index, picture,id} = property;\r\n    console.log(property);\r\n    return (\r\n        <div id={`card-${index}`} className=\"card\">\r\n        <img src={picture} alt=\"\"/>\r\n<div className=\"details\">\r\n// {/* <span className=\"index\">{index+1}</span> */}\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;"]},"metadata":{},"sourceType":"module"}