{"ast":null,"code":"import _classCallCheck from \"C:\\\\Priya\\\\BakeMore\\\\bakemore\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Priya\\\\BakeMore\\\\bakemore\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Priya\\\\BakeMore\\\\bakemore\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Priya\\\\BakeMore\\\\bakemore\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Priya\\\\BakeMore\\\\bakemore\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Priya\\\\BakeMore\\\\bakemore\\\\src\\\\Components\\\\DateAndTime.jsx\";\nimport React from 'react';\n\nvar DateAndTime =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DateAndTime, _React$Component);\n\n  function DateAndTime() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DateAndTime);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DateAndTime)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      date: \"\"\n    };\n\n    _this.getDate = function () {\n      var date = new Date().toDateString();\n\n      _this.setState({\n        date: date\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DateAndTime, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var date = this.state.date;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, date);\n    }\n  }]);\n\n  return DateAndTime;\n}(React.Component);\n\nexport default DateAndTime;","map":{"version":3,"sources":["C:\\Priya\\BakeMore\\bakemore\\src\\Components\\DateAndTime.jsx"],"names":["React","DateAndTime","state","date","getDate","Date","toDateString","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEOC,W;;;;;;;;;;;;;;;;;UACPC,K,GAAQ;AACRC,MAAAA,IAAI,EAAG;AADC,K;;UAORC,O,GAAU,YAAM;AAChB,UAAID,IAAI,GAAG,IAAIE,IAAJ,GAAWC,YAAX,EAAX;;AACA,YAAKC,QAAL,CAAc;AACVJ,QAAAA,IAAI,EAAJA;AADU,OAAd;AAGC,K;;;;;;;wCATmB;AAChB,WAAKC,OAAL;AACH;;;6BAQY;AAAA,UACND,IADM,GACE,KAAKD,KADP,CACNC,IADM;AAEb,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,IAAN,CAAN;AACC;;;;EAjB0BH,KAAK,CAACQ,S;;AAmBhC,eAAeP,WAAf","sourcesContent":["import React from 'react';\r\n\r\nclass  DateAndTime extends React.Component {\r\nstate = {\r\ndate : \"\"\r\n};\r\ncomponentDidMount() {\r\n    this.getDate();\r\n}\r\n\r\ngetDate = () => {\r\nvar date = new Date().toDateString();\r\nthis.setState({\r\n    date\r\n});\r\n};\r\n    render() { \r\nconst {date} = this.state; \r\nreturn<div>{date}</div>\r\n}\r\n}\r\n export default DateAndTime;"]},"metadata":{},"sourceType":"module"}